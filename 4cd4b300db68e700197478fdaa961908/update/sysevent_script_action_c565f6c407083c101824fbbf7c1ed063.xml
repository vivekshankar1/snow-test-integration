<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_script_action">
    <sysevent_script_action action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition_script/>
        <description/>
        <event_name>x_chef_automate.chef.process.data</event_name>
        <name>Asset Process</name>
        <order>100</order>
        <script><![CDATA[// if(gs.getProperty('x_chef_automate.chef.user')!="")
// gs.getSession().impersonate(gs.getProperty('x_chef_automate.chef.user'));
//var impersonator =   new global.impersination().impersonateUser(gs.getProperty('x_chef_automate.chef.user'));


var logger = new Logger();
var jsonUtil = new JsonUtil();
var importUtil = new ImportUtil();
var CopyUtil = new BufferToImportUtil();
var assetData = jsonUtil.parse(event.parm1.toString());
        for (var entry = 0; entry < assetData.length; entry++) {
            var asset = assetData[entry];
			
           var chefAssetsTable = new GlideRecord('x_chef_automate_asset_import');

            chefAssetsTable.initialize();
            var hasAssetData = CopyUtil.MapToImportTable(chefAssetsTable, asset, logger);
            if (!hasAssetData) {
                logger.debug("Business Rule Insert to Asset import: No asset data for entry");
            } else {
                if (chefAssetsTable.insert() === null) {
                    var message = "Insert failed into x_chef_automate_asset_import";
                    logger.warn(message);
                } else {
                    logger.debug("Insert succeeded into x_chef_automate_asset_import");
                }
            }
            // report 
            var complianceImport = new GlideRecord('x_chef_automate_compliance_import');
            complianceImport.initialize();
            if (importUtil.isComplianceReportEmpty(jsonUtil.getObject(asset, "report"))) {
                logger.debug("There is no compliance report to process");
                continue;
            }
            importUtil.mapToComplianceImportTable(complianceImport, asset, logger);
            if (complianceImport.insert() === null) {
                logger.warn("Insert failed into x_chef_automate_compliance_import");
            } else {
                logger.debug("Insert succeeded into x_chef_automate_compliance_import");
            }
		}]]></script>
        <synchronous>false</synchronous>
        <sys_class_name>sysevent_script_action</sys_class_name>
        <sys_created_by>Admin</sys_created_by>
        <sys_created_on>2021-05-06 12:44:44</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c565f6c407083c101824fbbf7c1ed063</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>Asset Process</sys_name>
        <sys_overrides/>
        <sys_package display_value="Chef Automate Integration App" source="x_chef_automate">4cd4b300db68e700197478fdaa961908</sys_package>
        <sys_policy/>
        <sys_scope display_value="Chef Automate Integration App">4cd4b300db68e700197478fdaa961908</sys_scope>
        <sys_update_name>sysevent_script_action_c565f6c407083c101824fbbf7c1ed063</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-06-25 08:29:19</sys_updated_on>
    </sysevent_script_action>
</record_update>
