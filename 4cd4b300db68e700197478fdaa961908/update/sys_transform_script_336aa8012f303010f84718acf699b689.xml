<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_transform_script">
    <sys_transform_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <map display_value="Chef Automate Sync Transform">56940d5cdbe8e700197478fdaa96190b</map>
        <order>300</order>
        <script><![CDATA[//Storage devices - block devices
(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {

 

    var jsonUtil = new JsonUtil();
    var util = new Util();
    var logger = new Logger();
    
    try {
        var attributes = jsonUtil.parse(source.attributes);
            var blocks = attributes.automatic.block_device;
            for (var fs in blocks) {
                var namei = fs;
                
                var modelid = source.model;
                var manufacturer = jsonUtil.getStringValue(blocks[fs], "model");
                var vendor = jsonUtil.getStringValue(blocks[fs], "vendor");
                var size =  jsonUtil.getStringValue(blocks[fs], "size");
                var removable =  jsonUtil.getStringValue(blocks[fs], "removable");
                var type =  jsonUtil.getStringValue(blocks[fs], "rev");
                var computer = source.server;
                var serialnumber = source.serial_number;
                var hostname = source.name;
                
                var blockdev = new GlideRecord('cmdb_ci_storage_device');
                blockdev.addEncodedQuery('computerSTARTSWITH'+ hostname + '^nameSTARTSWITH'+ namei);
                blockdev.query();
                if(blockdev.next()){
                    
                
                    blockdev.size = size;
                    blockdev.model_id = modelid;
                    blockdev.serial_number = serialnumber;
                    if(removable=="1"){
                        blockdev.storage_type = "Removable";
                    }
                    blockdev.device_id = type;
                    blockdev.model_id = modelid;
                    blockdev.manufacturer = manufacturer;
					blockdev.setWorkflow(false);
                    blockdev.update();
                    
                }
                
                else{
                    blockdev.initialize();
                    blockdev.name =  namei;
                    blockdev.serial_number =  serialnumber;
                    blockdev.size = size;
                    blockdev.model_id = modelid;
                    blockdev.computer = computer;
                    if(removable==1){
                        blockdev.storage_type = "Removable";
                    }
                    blockdev.device_id = type;
                    blockdev.model_id = modelid;
                    blockdev.manufacturer = manufacturer;
					blockdev.setWorkflow(false);
                    blockdev.insert();
                    
                }
            }
    
    }
    catch(error){
        logger.error("Block devices "+ error);
    }

 

})(source, map, log, target);]]></script>
        <sys_class_name>sys_transform_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-06-15 12:00:36</sys_created_on>
        <sys_id>336aa8012f303010f84718acf699b689</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>onAfter</sys_name>
        <sys_package display_value="Chef Automate Integration App" source="x_chef_automate">4cd4b300db68e700197478fdaa961908</sys_package>
        <sys_policy/>
        <sys_scope display_value="Chef Automate Integration App">4cd4b300db68e700197478fdaa961908</sys_scope>
        <sys_update_name>sys_transform_script_336aa8012f303010f84718acf699b689</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-06-29 12:46:38</sys_updated_on>
        <when>onAfter</when>
    </sys_transform_script>
</record_update>
