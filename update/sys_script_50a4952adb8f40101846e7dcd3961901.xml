<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_chef_automate_instances</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update automate instance</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var logger = new Logger();
    var jsonUtil = new JsonUtil();
    var automateApi = new AutomateApi(current.instance, current.api_token.getDecryptedValue());
    try {
		// set to -1 onLoad when test fails so we add teh data feed destination to automate
        if (current.destination_id == -1) {
			logger.debug("Adding destination to automate from update business rule");
            var secretId = automateApi.addSecret(current.name, current.servicenow_user, current.servicenow_password.getDecryptedValue());
            var destinationId = automateApi.addDestination(current.name, secretId);
            current.destination_id = destinationId;
			logger.debug("Adding destination to automate from update business rule new id: " + current.destination_id);
            current.setWorkflow(false);
            current.update();
        } else {
            automateApi.updateSecret(current.name, current.servicenow_user, current.servicenow_password.getDecryptedValue(), current.secret_id);
            automateApi.updateDestination(current.destination_id, current.name, current.secret_id);
        }
    } catch (ex) {
        logger.errorWithStack("Error calling automate secrets API", ex);
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>mscott</sys_created_by>
        <sys_created_on>2020-02-21 14:45:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>50a4952adb8f40101846e7dcd3961901</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Update automate instance</sys_name>
        <sys_overrides/>
        <sys_package display_value="Chef Automate" source="x_chef_automate">4cd4b300db68e700197478fdaa961908</sys_package>
        <sys_policy/>
        <sys_scope display_value="Chef Automate">4cd4b300db68e700197478fdaa961908</sys_scope>
        <sys_update_name>sys_script_50a4952adb8f40101846e7dcd3961901</sys_update_name>
        <sys_updated_by>mscott</sys_updated_by>
        <sys_updated_on>2020-06-04 10:41:31</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=50a4952adb8f40101846e7dcd3961901"/>
</record_update>
